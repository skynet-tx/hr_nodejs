/**
 * User: osavch
 * Date: 05.11.13
 * Time: 16:37
 * File name:
 */
var hash = require('app_controllers/pass.js').hash,
    getSalt = require('app_controllers/salt.js').getSalt,
    _ = require('underscore'),
    query_model = require('app_models/query_model.js');

// Authenticate using our plain-object database of doom!
var AuthController = {
    authenticate: function (email, pass, fn) {
        if (!module.parent) console.log('authenticating %s:%s', email, pass);

        query_model.findUser(email.toLowerCase(), function (err, results) {
            var user = null;

            if (err) {
                throw err; // or return an error message, or something
            } else {
                user = results[0];
            }

            // query the db for the given username
            if (!user) return fn(new Error('cannot find user'));
            // apply the same algorithm to the POSTed password, applying
            // the hash against the pass / salt, if there is a match we
            // found the user

            hash(pass, user.salt, function (err, hash) {
                if (err) return fn(err);
                if (hash == user.hash) return fn(null, user);
                fn(new Error('invalid password'));
            })
        });
    },
    restrict: function (req, res, next) {
        if (req.session.user) {
            next();
        } else {
            req.session.error = 'Access denied!';
            res.redirect('/#login');
        }
    },
    addNewUser: function(userData, fn){
        var salt = getSalt(5, 1, true);
        if(!userData.name) return fn({success: false});
        if(!userData.email) return fn({success: false});

        hash(userData.password, salt, function (err, hash) {
            if (err) return fn(err);
            userData.salt = salt;
            userData.hash = hash;
            delete userData.password

            query_model.addNewUser(userData, function (err, results) {
                if (err) return fn(err);
                return fn(null, results);
            });
        })
    },
    getCredentials: function(password, fn){
        var salt = getSalt(5, 1, true);
        hash(password, salt, function (err, hash) {
            if (err) return fn(err);

            return fn(null, {
                salt: salt,
                hash: hash
            });
        })
    }

};

exports = module.exports = AuthController;
